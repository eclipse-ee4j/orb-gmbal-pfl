<?xml version="1.0" encoding="UTF-8"?>
<!--

    Copyright (c) 1997, 2018 Oracle and/or its affiliates. All rights reserved.

    This program and the accompanying materials are made available under the
    terms of the Eclipse Distribution License v. 1.0, which is available at
    http://www.eclipse.org/org/documents/edl-v10.php.

    SPDX-License-Identifier: BSD-3-Clause

-->

<project name="bundles" basedir=".">
    <import file="modules.xml"/>

    <target name="init" depends="modules.init"/>
    <target name="-pre-init" depends="init"/>

    <patternset id="basic.export">
        <include name="org.glassfish.pfl.basic.algorithm"/> 
        <include name="org.glassfish.pfl.basic.concurrent"/> 
        <include name="org.glassfish.pfl.basic.contain"/> 
        <include name="org.glassfish.pfl.basic.facet"/> 
        <include name="org.glassfish.pfl.basic.fsm"/> 
        <include name="org.glassfish.pfl.basic.func"/> 
        <include name="org.glassfish.pfl.basic.graph"/> 
        <include name="org.glassfish.pfl.basic.logex"/> 
        <include name="org.glassfish.pfl.basic.proxy"/> 
    </patternset>

    <patternset id="basic-tools.export">
        <include name="org.glassfish.pfl.basic.tools.argparser"/> 
        <include name="org.glassfish.pfl.basic.tools.file"/> 
        <include name="org.glassfish.pfl.basic.tools.logex"/> 
    </patternset>

    <patternset id="dynamic.export">
        <include name="org.glassfish.pfl.dynamic.codegen.spi"/> 
        <include name="org.glassfish.pfl.dynamic.copyobject.spi"/> 
        <include name="org.glassfish.pfl.dynamic.generator"/> 
        <include name="org.glassfish.pfl.dynamic.codegen.impl"/> 
        <include name="org.glassfish.pfl.dynamic.copyobject.impl"/> 
    </patternset>

    <patternset id="tf.export">
        <include name="org.glassfish.pfl.tf.spi"/> 
        <include name="org.glassfish.pfl.tf.spi.annotation"/> 
        <include name="org.glassfish.pfl.tf.timer.spi"/> 
        <include name="org.glassfish.pfl.tf.timer.impl"/> 
    </patternset>

    <patternset id="tf-tools.export">
        <include name="org.glassfish.pfl.tf.tools.enhancer"/> 
    </patternset>

    <patternset id="test.export">
        <include name="org.glassfish.pfl.test"/> 
    </patternset>

    <!-- Including only the part of asm that we need. -->
    <patternset id="asm.export">
	<include name="org.glassfish.pfl.objectweb.asm"/>
	<!-- <include name="org.glassfish.pfl.objectweb.asm.attrs"/> -->
	<include name="org.glassfish.pfl.objectweb.asm.commons"/> 
	<!-- <include name="org.glassfish.pfl.objectweb.asm.optimizer"/> -->
	<include name="org.glassfish.pfl.objectweb.asm.signature"/> 
	<include name="org.glassfish.pfl.objectweb.asm.tree"/>
	<include name="org.glassfish.pfl.objectweb.asm.tree.analysis"/> 
	<include name="org.glassfish.pfl.objectweb.asm.util"/>
	<!-- <include name="org.glassfish.pfl.objectweb.asm.xml"/> -->
    </patternset>

    <property name="version" value="3.2.0-b001"/>
    <property name="bundle.dir" value="dist/bundles"/>
    <property name="bnd.classpath" value="build/classes"/>
    <property name="repo.url" value="svn:https://svn.java.net/svn/maven2-repository~svn/trunk/repository"/>

    <target name="make-src-bundle" depends="modules.init">
	<mkdir dir="${bundle.dir}"/>
	<jar jarfile="${bundle.dir}/pfl-source.jar" duplicate="fail">
	    <fileset dir="src">
	    </fileset>
	</jar>
    </target>

    <target name="make-bundles" depends="modules.init, make-src-bundle">
        <make-bundle 
            bundlename="pfl-basic"
            outfile="pfl-basic.jar"
            outdir="${bundle.dir}"
            version="${version}"
            classpath="${bnd.classpath}">
            <directive-list>
                <directive type="Export-Package" name="basic.export"/>
            </directive-list>
        </make-bundle>
        <make-bundle 
            bundlename="pfl-basic-tools"
            outfile="pfl-basic-tools.jar"
            outdir="${bundle.dir}"
            version="${version}"
            classpath="${bnd.classpath}">
            <directive-list>
                <directive type="Export-Package" name="basic-tools.export"/>
            </directive-list>
        </make-bundle>
        <make-bundle 
            bundlename="pfl-dynamic"
            outfile="pfl-dynamic.jar"
            outdir="${bundle.dir}"
            version="${version}"
            classpath="${bnd.classpath}">
            <directive-list>
                <directive type="Export-Package" name="dynamic.export"/>
            </directive-list>
        </make-bundle>
        <make-bundle 
            bundlename="pfl-tf"
            outfile="pfl-tf.jar"
            outdir="${bundle.dir}"
            version="${version}"
            classpath="${bnd.classpath}">
            <directive-list>
                <directive type="Export-Package" name="tf.export"/>
            </directive-list>
        </make-bundle>
        <make-bundle 
            bundlename="pfl-tf-tools"
            outfile="pfl-tf-tools.jar"
            outdir="${bundle.dir}"
            version="${version}"
            classpath="${bnd.classpath}">
            <directive-list>
                <directive type="Export-Package" name="tf-tools.export"/>
            </directive-list>
        </make-bundle>
        <make-bundle 
            bundlename="pfl-test"
            outfile="pfl-test.jar"
            outdir="${bundle.dir}"
            version="${version}"
            classpath="${bnd.classpath}">
            <directive-list>
                <directive type="Export-Package" name="test.export"/>
            </directive-list>
        </make-bundle>
    </target>

    <target name="-post-jar" depends="make-bundles"/>

    <macrodef name="make-pfl-pom">
	<attribute name="artifactId"/>
	<attribute name="description"/>
	<element name="dep-list" optional="true"/>
	<sequential>
	    <make-pom 
		outdir="dist/bundles"
		groupId="org.glassfish.pfl" 
		artifactId="@{artifactId}" 
		version="${version}"
		description="@{description}"
		url="http://kenai.com/hg/gmbal~pfl">
	    </make-pom>
	</sequential>
    </macrodef>

    <target name="make-poms" depends="modules.init">
	<make-pfl-pom artifactid="pfl-basic"
	    description="Base library for functions, logex, fsm, etc.">
	</make-pfl-pom>
	<make-pfl-pom artifactid="pfl-basic-tools" 
	    description="Build time tols for pfl-basic">
	    <dep-list>
		<dependency
		    groupId="org.glassfish.pfl"
		    artifactId="pfl-basic"
		    version="${version}"/>
	    </dep-list>
	</make-pfl-pom>
	<make-pfl-pom artifactid="pfl-dynamic" 
	    description="Dynamic code generation library">
	    <dep-list>
		<dependency
		    groupId="org.glassfish.pfl"
		    artifactId="pfl-basic"
		    version="${version}"/>
	    </dep-list>
	</make-pfl-pom>
	<make-pfl-pom artifactid="pfl-test" 
	    description="Test utilities">
	    <dep-list>
		<dependency
		    groupId="org.glassfish.pfl"
		    artifactId="pfl-basic"
		    version="${version}"/>
		<dependency
		    groupId="org.glassfish.pfl"
		    artifactId="pfl-basic-tools"
		    version="${version}"/>
	    </dep-list>
	</make-pfl-pom>
	<make-pfl-pom artifactid="pfl-tf" 
	    description="Tracing facility library">
	    <dep-list>
		<dependency
		    groupId="org.glassfish.pfl"
		    artifactId="pfl-basic"
		    version="${version}"/>
	    </dep-list>
	</make-pfl-pom>
	<make-pfl-pom artifactid="pfl-tf-tools" 
	    description="Tracing facility library">
	    <dep-list>
		<dependency
		    groupId="org.glassfish.pfl"
		    artifactId="pfl-basic"
		    version="${version}"/>
		<dependency
		    groupId="org.glassfish.pfl"
		    artifactId="pfl-basic-tools"
		    version="${version}"/>
		<dependency
		    groupId="org.glassfish.pfl"
		    artifactId="pfl-tf"
		    version="${version}"/>
	    </dep-list>
	</make-pfl-pom>
	<make-pfl-pom artifactid="pfl-source"
	    description="All pfl source code">
	</make-pfl-pom>
    </target>

    <macrodef name="pfl-push-to-local-maven">
	<attribute name="module"/>
	<sequential>
	    <push-to-local-maven outdir="dist/bundles"
		module="@{module}"/>
	</sequential>
    </macrodef>

    <macrodef name="pfl-push-to-maven">
	<attribute name="module"/>
	<attribute name="destination"/>
	<sequential>
	    <push-to-maven outdir="dist/bundles"
		module="@{module}" destination="@{destination}"/>
	</sequential>
    </macrodef>

    <macrodef name="release-to-maven">
        <attribute name="destination"/>
        <sequential>
            <echo message="Releasing modules with version ${version} to @{destination}"/>
            <pfl-push-to-maven destination="@{destination}" module="pfl-basic" />
            <pfl-push-to-maven destination="@{destination}" module="pfl-basic-tools"/>
            <pfl-push-to-maven destination="@{destination}" module="pfl-dynamic"/>
            <pfl-push-to-maven destination="@{destination}" module="pfl-test"/>
            <pfl-push-to-maven destination="@{destination}" module="pfl-tf"/>
            <pfl-push-to-maven destination="@{destination}" module="pfl-tf-tools"/>
            <pfl-push-to-maven destination="@{destination}" module="pfl-source"/>
        </sequential>
    </macrodef>

    <macrodef name="release-to-local-maven">
        <sequential>
            <echo message="Releasing modules with version ${version} to local repository"/>
            <pfl-push-to-local-maven module="pfl-basic"/>
            <pfl-push-to-local-maven module="pfl-basic-tools"/>
            <pfl-push-to-local-maven module="pfl-dynamic"/>
            <pfl-push-to-local-maven module="pfl-test"/>
            <pfl-push-to-local-maven module="pfl-tf"/>
            <pfl-push-to-local-maven module="pfl-tf-tools"/>
            <pfl-push-to-local-maven module="pfl-source"/>
        </sequential>
    </macrodef>

    <target name="release" depends="modules.init, make-bundles, make-poms">
        <echo message="releasing to ${repo.url}"/>
        <release-to-maven destination="${repo.url}"/>
    </target>

    <target name="release-local" depends="modules.init, make-bundles, make-poms">
        <echo message="releasing to local repository"/>
        <release-to-local-maven/>
    </target>
</project>
